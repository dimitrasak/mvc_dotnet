@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model X.PagedList.IPagedList<mvc_dotnet.Models.Movie>

@{
    ViewData["Title"] = "Movies";
}

<h1>Movies</h1>

<p>
    <!--<a asp-action="Create">Create New</a>-->
</p>
<table class="table table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Content)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Length)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Summary)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Director)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ContentAdmin)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>            
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Length)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Summary)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Director)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ContentAdmin.UserUsername)
            </td>
            <td>
                    <!--<a asp-action="Edit" asp-route-id="@item.Id" asp-route-name="@item.Name">Edit</a> |-->
                    <a asp-action="Details" asp-route-id="@item.Id" asp-route-name="@item.Name">Details</a> |
                   <!-- <a asp-action="Delete" asp-route-id="@item.Id" asp-route-name="@item.Name">Delete</a>-->
            </td>
        </tr>
}
    </tbody>
</table>
<!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
<nav>
    @Html.PagedListPager(Model, page => Url.Action("index", new { page = page }), new PagedListRenderOptions()
{
    ActiveLiElementClass = "active",
    PageClasses = new[] { "page-link" },
    LiElementClasses = new[] { "page-item" },
    UlElementClasses = new[] { "pagination", "justify-content-center", "mt-3" },
    LinkToNextPageFormat = "Next",
    LinkToPreviousPageFormat = "Previous",
    MaximumPageNumbersToDisplay = 5,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always,

})
</nav>
